// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    [JsonConverter(typeof(AutoCompleteResultConverter))]
    public partial class AutoCompleteResult : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Value))
            {
                writer.WritePropertyName("value");
                writer.WriteStartArray();
                foreach (var item in Value)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static AutoCompleteResult DeserializeAutoCompleteResult(JsonElement element)
        {
            Optional<IList<AutoCompleteResultValue>> value = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AutoCompleteResultValue> array = new List<AutoCompleteResultValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AutoCompleteResultValue.DeserializeAutoCompleteResultValue(item));
                    }
                    value = array;
                    continue;
                }
            }
            return new AutoCompleteResult(Optional.ToList(value));
        }

        internal partial class AutoCompleteResultConverter : JsonConverter<AutoCompleteResult>
        {
            public override void Write(Utf8JsonWriter writer, AutoCompleteResult model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override AutoCompleteResult Read(ref Utf8JsonReader reader, System.Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeAutoCompleteResult(document.RootElement);
            }
        }
    }
}
