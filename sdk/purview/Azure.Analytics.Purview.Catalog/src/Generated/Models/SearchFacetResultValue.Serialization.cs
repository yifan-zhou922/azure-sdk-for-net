// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    [JsonConverter(typeof(SearchFacetResultValueConverter))]
    public partial class SearchFacetResultValue : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(AssetType))
            {
                writer.WritePropertyName("assetType");
                writer.WriteStartArray();
                foreach (var item in AssetType)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Classification))
            {
                writer.WritePropertyName("classification");
                writer.WriteStartArray();
                foreach (var item in Classification)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ClassificationCategory))
            {
                writer.WritePropertyName("classificationCategory");
                writer.WriteStartArray();
                foreach (var item in ClassificationCategory)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ContactId))
            {
                writer.WritePropertyName("contactId");
                writer.WriteStartArray();
                foreach (var item in ContactId)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(FileExtension))
            {
                writer.WritePropertyName("fileExtension");
                writer.WriteStartArray();
                foreach (var item in FileExtension)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Label))
            {
                writer.WritePropertyName("label");
                writer.WriteStartArray();
                foreach (var item in Label)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Term))
            {
                writer.WritePropertyName("term");
                writer.WriteStartArray();
                foreach (var item in Term)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static SearchFacetResultValue DeserializeSearchFacetResultValue(JsonElement element)
        {
            Optional<IList<SearchFacetItemValue>> assetType = default;
            Optional<IList<SearchFacetItemValue>> classification = default;
            Optional<IList<SearchFacetItemValue>> classificationCategory = default;
            Optional<IList<SearchFacetItemValue>> contactId = default;
            Optional<IList<SearchFacetItemValue>> fileExtension = default;
            Optional<IList<SearchFacetItemValue>> label = default;
            Optional<IList<SearchFacetItemValue>> term = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("assetType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    assetType = array;
                    continue;
                }
                if (property.NameEquals("classification"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    classification = array;
                    continue;
                }
                if (property.NameEquals("classificationCategory"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    classificationCategory = array;
                    continue;
                }
                if (property.NameEquals("contactId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    contactId = array;
                    continue;
                }
                if (property.NameEquals("fileExtension"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    fileExtension = array;
                    continue;
                }
                if (property.NameEquals("label"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    label = array;
                    continue;
                }
                if (property.NameEquals("term"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    term = array;
                    continue;
                }
            }
            return new SearchFacetResultValue(Optional.ToList(assetType), Optional.ToList(classification), Optional.ToList(classificationCategory), Optional.ToList(contactId), Optional.ToList(fileExtension), Optional.ToList(label), Optional.ToList(term));
        }

        internal partial class SearchFacetResultValueConverter : JsonConverter<SearchFacetResultValue>
        {
            public override void Write(Utf8JsonWriter writer, SearchFacetResultValue model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override SearchFacetResultValue Read(ref Utf8JsonReader reader, System.Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeSearchFacetResultValue(document.RootElement);
            }
        }
    }
}
