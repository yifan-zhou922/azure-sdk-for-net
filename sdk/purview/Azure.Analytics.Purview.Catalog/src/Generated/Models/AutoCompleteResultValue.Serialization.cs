// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    [JsonConverter(typeof(AutoCompleteResultValueConverter))]
    public partial class AutoCompleteResultValue : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Text))
            {
                writer.WritePropertyName("text");
                writer.WriteStringValue(Text);
            }
            if (Optional.IsDefined(QueryPlusText))
            {
                writer.WritePropertyName("queryPlusText");
                writer.WriteStringValue(QueryPlusText);
            }
            writer.WriteEndObject();
        }

        internal static AutoCompleteResultValue DeserializeAutoCompleteResultValue(JsonElement element)
        {
            Optional<string> text = default;
            Optional<string> queryPlusText = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("text"))
                {
                    text = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("queryPlusText"))
                {
                    queryPlusText = property.Value.GetString();
                    continue;
                }
            }
            return new AutoCompleteResultValue(text.Value, queryPlusText.Value);
        }

        internal partial class AutoCompleteResultValueConverter : JsonConverter<AutoCompleteResultValue>
        {
            public override void Write(Utf8JsonWriter writer, AutoCompleteResultValue model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override AutoCompleteResultValue Read(ref Utf8JsonReader reader, System.Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeAutoCompleteResultValue(document.RootElement);
            }
        }
    }
}
