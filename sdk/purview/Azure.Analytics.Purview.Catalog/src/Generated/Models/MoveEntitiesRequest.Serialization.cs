// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    [JsonConverter(typeof(MoveEntitiesRequestConverter))]
    public partial class MoveEntitiesRequest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(EntityGuids))
            {
                writer.WritePropertyName("entityGuids");
                writer.WriteStartArray();
                foreach (var item in EntityGuids)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static MoveEntitiesRequest DeserializeMoveEntitiesRequest(JsonElement element)
        {
            Optional<IList<string>> entityGuids = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("entityGuids"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    entityGuids = array;
                    continue;
                }
            }
            return new MoveEntitiesRequest(Optional.ToList(entityGuids));
        }

        internal partial class MoveEntitiesRequestConverter : JsonConverter<MoveEntitiesRequest>
        {
            public override void Write(Utf8JsonWriter writer, MoveEntitiesRequest model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override MoveEntitiesRequest Read(ref Utf8JsonReader reader, System.Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeMoveEntitiesRequest(document.RootElement);
            }
        }
    }
}
