// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    [JsonConverter(typeof(EntityMutationResponseConverter))]
    public partial class EntityMutationResponse : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(GuidAssignments))
            {
                writer.WritePropertyName("guidAssignments");
                writer.WriteStartObject();
                foreach (var item in GuidAssignments)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsCollectionDefined(MutatedEntities))
            {
                writer.WritePropertyName("mutatedEntities");
                writer.WriteStartObject();
                foreach (var item in MutatedEntities)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStartArray();
                    foreach (var item0 in item.Value)
                    {
                        writer.WriteObjectValue(item0);
                    }
                    writer.WriteEndArray();
                }
                writer.WriteEndObject();
            }
            if (Optional.IsCollectionDefined(PartialUpdatedEntities))
            {
                writer.WritePropertyName("partialUpdatedEntities");
                writer.WriteStartArray();
                foreach (var item in PartialUpdatedEntities)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static EntityMutationResponse DeserializeEntityMutationResponse(JsonElement element)
        {
            Optional<IDictionary<string, string>> guidAssignments = default;
            Optional<IDictionary<string, IList<AtlasEntityHeader>>> mutatedEntities = default;
            Optional<IList<AtlasEntityHeader>> partialUpdatedEntities = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("guidAssignments"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    guidAssignments = dictionary;
                    continue;
                }
                if (property.NameEquals("mutatedEntities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, IList<AtlasEntityHeader>> dictionary = new Dictionary<string, IList<AtlasEntityHeader>>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        List<AtlasEntityHeader> array = new List<AtlasEntityHeader>();
                        foreach (var item in property0.Value.EnumerateArray())
                        {
                            array.Add(AtlasEntityHeader.DeserializeAtlasEntityHeader(item));
                        }
                        dictionary.Add(property0.Name, array);
                    }
                    mutatedEntities = dictionary;
                    continue;
                }
                if (property.NameEquals("partialUpdatedEntities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasEntityHeader> array = new List<AtlasEntityHeader>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasEntityHeader.DeserializeAtlasEntityHeader(item));
                    }
                    partialUpdatedEntities = array;
                    continue;
                }
            }
            return new EntityMutationResponse(Optional.ToDictionary(guidAssignments), Optional.ToDictionary(mutatedEntities), Optional.ToList(partialUpdatedEntities));
        }

        internal partial class EntityMutationResponseConverter : JsonConverter<EntityMutationResponse>
        {
            public override void Write(Utf8JsonWriter writer, EntityMutationResponse model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override EntityMutationResponse Read(ref Utf8JsonReader reader, System.Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeEntityMutationResponse(document.RootElement);
            }
        }
    }
}
