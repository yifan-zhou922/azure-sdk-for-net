// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    [JsonConverter(typeof(ResourceLinkConverter))]
    public partial class ResourceLink : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DisplayName))
            {
                writer.WritePropertyName("displayName");
                writer.WriteStringValue(DisplayName);
            }
            if (Optional.IsDefined(Url))
            {
                writer.WritePropertyName("url");
                writer.WriteStringValue(Url);
            }
            writer.WriteEndObject();
        }

        internal static ResourceLink DeserializeResourceLink(JsonElement element)
        {
            Optional<string> displayName = default;
            Optional<string> url = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("displayName"))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("url"))
                {
                    url = property.Value.GetString();
                    continue;
                }
            }
            return new ResourceLink(displayName.Value, url.Value);
        }

        internal partial class ResourceLinkConverter : JsonConverter<ResourceLink>
        {
            public override void Write(Utf8JsonWriter writer, ResourceLink model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override ResourceLink Read(ref Utf8JsonReader reader, System.Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeResourceLink(document.RootElement);
            }
        }
    }
}
