// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    [JsonConverter(typeof(AtlasConstraintDefConverter))]
    public partial class AtlasConstraintDef : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Params))
            {
                writer.WritePropertyName("params");
                writer.WriteStartObject();
                foreach (var item in Params)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(Type))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type);
            }
            writer.WriteEndObject();
        }

        internal static AtlasConstraintDef DeserializeAtlasConstraintDef(JsonElement element)
        {
            Optional<IDictionary<string, object>> @params = default;
            Optional<string> type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("params"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, object> dictionary = new Dictionary<string, object>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetObject());
                    }
                    @params = dictionary;
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
            }
            return new AtlasConstraintDef(Optional.ToDictionary(@params), type.Value);
        }

        internal partial class AtlasConstraintDefConverter : JsonConverter<AtlasConstraintDef>
        {
            public override void Write(Utf8JsonWriter writer, AtlasConstraintDef model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override AtlasConstraintDef Read(ref Utf8JsonReader reader, System.Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeAtlasConstraintDef(document.RootElement);
            }
        }
    }
}
