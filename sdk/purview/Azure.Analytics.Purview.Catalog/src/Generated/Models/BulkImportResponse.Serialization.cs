// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    [JsonConverter(typeof(BulkImportResponseConverter))]
    public partial class BulkImportResponse : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(FailedImportInfoList))
            {
                writer.WritePropertyName("failedImportInfoList");
                writer.WriteStartArray();
                foreach (var item in FailedImportInfoList)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(SuccessImportInfoList))
            {
                writer.WritePropertyName("successImportInfoList");
                writer.WriteStartArray();
                foreach (var item in SuccessImportInfoList)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static BulkImportResponse DeserializeBulkImportResponse(JsonElement element)
        {
            Optional<IList<ImportInfo>> failedImportInfoList = default;
            Optional<IList<ImportInfo>> successImportInfoList = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("failedImportInfoList"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ImportInfo> array = new List<ImportInfo>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ImportInfo.DeserializeImportInfo(item));
                    }
                    failedImportInfoList = array;
                    continue;
                }
                if (property.NameEquals("successImportInfoList"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ImportInfo> array = new List<ImportInfo>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ImportInfo.DeserializeImportInfo(item));
                    }
                    successImportInfoList = array;
                    continue;
                }
            }
            return new BulkImportResponse(Optional.ToList(failedImportInfoList), Optional.ToList(successImportInfoList));
        }

        internal partial class BulkImportResponseConverter : JsonConverter<BulkImportResponse>
        {
            public override void Write(Utf8JsonWriter writer, BulkImportResponse model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override BulkImportResponse Read(ref Utf8JsonReader reader, System.Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeBulkImportResponse(document.RootElement);
            }
        }
    }
}
