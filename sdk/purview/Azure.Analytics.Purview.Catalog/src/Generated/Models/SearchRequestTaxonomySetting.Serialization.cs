// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    public partial class SearchRequestTaxonomySetting : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(AssetTypes))
            {
                writer.WritePropertyName("assetTypes");
                writer.WriteStartArray();
                foreach (var item in AssetTypes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Facet))
            {
                writer.WritePropertyName("facet");
                writer.WriteObjectValue(Facet);
            }
            writer.WriteEndObject();
        }

        internal static SearchRequestTaxonomySetting DeserializeSearchRequestTaxonomySetting(JsonElement element)
        {
            Optional<IList<string>> assetTypes = default;
            Optional<SearchFacetItem> facet = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("assetTypes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    assetTypes = array;
                    continue;
                }
                if (property.NameEquals("facet"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    facet = SearchFacetItem.DeserializeSearchFacetItem(property.Value);
                    continue;
                }
            }
            return new SearchRequestTaxonomySetting(Optional.ToList(assetTypes), facet.Value);
        }
    }
}
